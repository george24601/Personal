Plan:
Given a model, generate the network. Then given the network, find the "best" model. Models will have set of parameters we  use to evaluate

AMG:
generative model B(V,C,M, {Pc}), for each pair of nodes in community A, we connect them with Pr(A)
Overall edge probability P(u, v) =
----------
F(u, A): the membershp strengh of node u to community A.
Pr(A, u,v) = 1 - exp(-F(u,A) * F(v,A)) => Community membershp strenght matrix F(Nodes * Communities)
Generate P(u,v) from Pr(A, u,v)=>
P(u,v) = 1 - exp(-F(u) * F(v)^T)

-----
Given a network G(V, E), estimate F that maximized the likelihood of:
we use log-likelihood to make numeric error small
Gradiant descant
Compute a gradient of a single row Fu of F

Coordinate gradient ascent: but slow

improvement and why it works
