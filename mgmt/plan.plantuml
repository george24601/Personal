
@startuml

queue "pai.gm.mcms.coupon" as couponQ

database "reco redis" as redis {
}

database "reco ES" as es {
}



[Reco indexer] as indexer

indexer --> es : continously scan
indexer --> redis : populate zsets
indexer --> couponQ: listen to manually end event

@enduml


@startuml

database "notification" as db {
[channel_coupon] as couponT
[customer_coupon] as customerT
[msg_meta] as meta

}

queue "pai.plc.coupon.wallet" as cwQ
queue "pai.gm.mcms.coupon" as couponQ
queue "coupon.wallet.expiring" as sink
[mcms change capture] as mcmsCC
[cw change capture] as cwCC
[notification scanner] as scanner

mcmsCC --> couponT
mcmsCC --> couponQ
cwCC --> customerT
cwCC --> cwQ 
scanner --> db
scanner --> sink
@enduml


@startuml

database "mcms read replica" as mcms {
}

queue "pai.gm.mcms.coupon" as couponQ
queue "pai.gm.mcms.store" as storeQ

database "reco redis" as redis {
}

[redis indexer] as indexer

indexer --> mcms : continously scan
indexer --> redis : write
indexer --> couponQ: read event triggers
indexer --> storeQ: read event triggers
@enduml

@startuml
!include <aws/common>
!include <aws/Storage/AmazonS3/AmazonS3>
AMAZONS3(store_list)
[bff] --> [channels] 
[channels] -->[reco]
[bff] -->[reco]
database "elasticsearch" as es {
}
database "redis" as redis {
}

queue "pai.gm.mcms.coupon" as couponQ
queue "pai.gm.mcms.store" as storeQ
[es updater] as updater
updater --> couponQ
updater --> storeQ
reco --> redis
reco --> es
updater -> es
updater -> store_list
@enduml


