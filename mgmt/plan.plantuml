@startuml
queue "min topics" as mt
queue "hour topics" as ht
queue "day topics" as dt
queue "week topics" as wt

queue "segment match topic" as uet
queue "effective event topic" as eet
[producer] as p
[min consumer] as mc
[hour consumer] as hc
[day consumer] as dc
[week consumer] as wc
p --> mt
p --> ht
p --> dt
p --> wt
p --> uet
mc --> mt
mc --> eet
hc --> ht
hc --> mt
dc --> dt
dc --> mt 
wc --> wt
wc --> dt

@enduml


@startuml
[producer] as p
[consumer] as c

queue "segment match topic" as uet
queue "effective event topic" as eet
queue "hour 1" as h1
queue "hour 2" as h2
queue "hour 168" as h168

p --> uet
p --> h1 
p --> h2
p --> h168

c --> h1
c --> h2
c --> h168

c --> eet

@enduml


@startuml
[dev poc copier - 3 days] as cp_poc
[dev poc purger - 2 days] as purger_poc
[insertion development - 3 days] as in_d
[development - 3 days] as in_d

di --> dc
di --> 

@enduml

@startuml

[Stop purger] as sp
[Stop copier] as sc
[flyway hot] as fh
[flyway cold] as fc
[Start purger] as p
[Start copier] as c

sp --> fh
sc --> fh
sp --> fc
sc --> fc
fh --> c
fc --> c
c --> p

@enduml

@startuml
[full restore] as fr
[single row insert] as si
[wallet code change] as cc
[single row deletion] as sd
[batch row insert] as bi
[batch row delete] as bd
fr --> si
si --> bi
bi --> bd
sd --> bd
si -> cc
cc -> sd
@enduml

@startuml

component [Pre-prod] {
database TiDB
queue "saved mysql traffic" as traffic 
[sync-diff] as sd
database Aurora_V
[cross domain checking] as cd
}
@enduml

@startuml

component [PROD]{
database Aurora_M
database Aurora_S
database TiDB_M
database TiDB_S
component Payment
database Wallet
}

component [PRE-PROD]{

queue ReplayProxy as rp
database TiDB_V
[cross domain checker] as dc
[sync-diff] as sd
}


TiDB_M <-- Aurora_M: binlog to
TiDB_M --> TiDB_S: binlog to
@enduml


@startuml
database "events" {
  [activation_events] as ae
}
database "metadata" {
  [consumer_meta] as cm 
}

[producer] as dep

queue "segment match topic" as uet
queue "effective event topic" as eet

[multiple consumers] as c1
[coordinator] as co
[cleanup daemon] as cd

dep --> eet
uet <-- dep
dep --> ae
c1 --> co
co --> cm
c1 --> ae
cd --> ae
c1 --> eet

@enduml

@startuml
skinparam component {
	backgroundColor<<done>> Green
	backgroundColor<<doing>> Yellow
	backgroundColor<<explore>> Blue
}

[Java] --> [Spring]
[Network] --> [RDS]
[Network] --> [Redis]
[RDS] --> [Spring]
[Java] --> [Kafka]
[Network] --> [Kafka]
@enduml
