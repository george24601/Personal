@startuml
database TiDB_M
database TiDB_S
database Aurora_M
database Aurora_S

TiDB_M <-- Aurora_M: binlog
TiDB_M -> TiDB_S: binlog
Aurora_M -> Aurora_S : existing binlog
Aurora_S -> Daas: exisiting pipeline

[Payment] -> Aurora_M
@enduml

@startuml
database TiDB
database Aurora_M as RDS
database Aurora_S as Slave
component [cashier] as C {
    [proxy]
}
component [NPS] as P
queue kafka
[/pay] -> C
proxy --> [OPS]: 99% /pay
proxy --> P: 1% /pay
[OPS] -> RDS
P --> TiDB
TiDB --> RDS: binlog
[other APIs] --> [NRS]
kafka --> [NRS]
[NRS] -> RDS
[NRS] -> TiDB
RDS -> Slave: existing binlog
Slave -> [DaaS]: existing pipeline
@enduml

@startuml
database TiDB_M
database TiDB_S
database Aurora_M
database Aurora_S

TiDB_M --> Aurora_M: binlog
TiDB_M -> TiDB_S: binlog
Aurora_M -> Aurora_S : existing binlog
Aurora_S -> Daas: exisiting pipeline

[Payment] -> TiDB_M
@enduml



@startuml

[Payment] --> [Aurora Mar] 

[Payment] --> [Aurora Feb] 

[Refund db] --> [Aurora Jan]
[Refund db] --> [Aurora Feb]
[Refund db] --> [Aurora Mar]

[Refund] --> [Refund db]
@enduml




@startuml
[STG cold]  <-- [PERF cold]
[STG cold] <-- [STG refund & comp flow]
[STG refund & comp flow] <-- [STG purge]
[STG cold] <-- [STG big query & recon]
[STG big query & recon] <-- [STG purge]
[STG big query & recon] <-- [PERF big query & recon] 
[STG purge] <-- [PERF purge]
[PERF cold] <-- [PERF refund & comp flow]
[PERF refund & comp flow] <-- [PERF purge]
[PERF big query & recon] <-- [PERF purge]
@enduml

[STG cold] --> [STG archiving immutable]
[STG new refund] --> [STG purge mutable]
[STG archiving immutable] --> [STG purge immutable]
[STG archiving immutable] --> [STG archiving mutable] 
[STG archiving immutable] --> [PROD cluster]
[Aurora persist] --> [PROD purge]
[PROD cluster] --> [PROD archive]
[PROD archive] --> [PROD purge]
[STG new refund] --> [PROD new refund]
[PROD new refund] --> [PROD purge]
[STG archiving mutable] --> [STG purge mutable]
[STG purge immutable] --> [STG purge mutable]
[STG purge mutable] --> [PROD purge]




@startuml
skinparam component {
	backgroundColor<<done>> Green
	backgroundColor<<doing>> Yellow
	backgroundColor<<explore>> Blue
}

[Java] --> [Spring]
[Network] --> [RDS]
[Network] --> [Redis]
[RDS] --> [Spring]
[Java] --> [Kafka]
[Network] --> [Kafka]
@enduml
