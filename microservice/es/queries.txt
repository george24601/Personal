If you run a match query against a full-text field, it will analyze the query string by using the correct analyzer for that field before executing the search:

If you use it on a field containing an exact value, such as a number, a date, a Boolean, or a not_analyzed string field, then it will search for that exact value

The range query allows you to find numbers or dates that fall into a specified range:

The term query is used to search by exact values, be they numbers, dates, Booleans, or not_analyzed exact-value string fields:

{
    "bool": {
        "must":     { "match": { "title": "how to make millions" }},
        "must_not": { "match": { "tag":   "spam" }},
        "should": [
            { "match": { "tag": "starred" }},
            { "range": { "date": { "gte": "2014-01-01" }}}
        ]
    }
}

because it is now a non-scoring query, it can use the variety of optimizations available to filters which should increase performance.

If you need to filter on many different criteria, the bool query itself can be used as a non-scoring query. Simply place it inside the
filter clause and continue building your boolean logic:

GET /gb/tweet/_validate/query?explain
