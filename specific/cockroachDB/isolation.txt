For a group of atomic, concurrent transactions, the commit of one transaction may not interleave with the operations of another transaction.

default isolation level is called Serializable Snapshot. It is an optimistic, multi-version, timestamp-ordered concurrency control system with the following properties

Read-Write (RW) – Second operation overwrites a value that was read by the first operation.
Write-Read (WR) – Second operation reads a value that was written by the first operation.
Write-Write (WW) – Second operation overwrites a value that was written by first operation.

Whenever an operation conflicts with an operation from a different transaction, draw a directed edge from the conflicting operation to the conflicted operation.

a history is guaranteed to be serializable if (and only if) its serializability graph is acyclic.

--------

Every transaction is assigned a timestamp (from the node on which it starts) when it begins. All operations in that transaction take place at this same timestamp, for the duration of the transaction.

Individual operations can locally determine when they conflict with another operation, and what the transaction timestamp of the conflicted operation is.

Operations are only allowed to conflict with earlier timestamps; a transaction is not allowed to commit if doing so would create a conflict with a later timestamp.

By disallowing any conflicts that flow against the timestamp-ordered direction, cyclic serializability graphs are impossible. 

Read operations on a key return the most recent version with a lower timestamp than the operation:

form WR conflicts with later transactions; read operations will never read a value with a later timestamp.
