feeder: data soruces containing all values you want to use in your scenarios, e.g., CSV Fedders

---------
///TO pass parameter
JAVA_OPTS="-Dusers=500 -Dramp=3600"
val nbUsers = Integer.getInteger("users", 1)
val myRamp  = java.lang.Long.getLong("ramp", 0L)

JAVA_OPTS="-Dfoo=bar"
val foo = System.getProperty("foo")

--------

Gatling doesn’t have a cluster mode yet, but you can achieve similar results manually:

deploy Gatling on several machines along with the Simulation classes and the associated resources (data, bodies, etc..)
launch them remotely from a script, with the -nr (no reports) option
retrieve all the simulation.log files
rename them so they don’t clash
place them into a folder in the results folder of a Gatling instance
generate the reports with Gatling with the -ro name-of-the-simulation-folder (reports only), Gatling will pick all the files that match
.*\.log
