Scenario: handle short time bursts. After 30 mins, the traffic falls off

But merging the delta into base will affect I/O performance => merge alternatively between zones
during merge, no business traffic, only event log and paxos votes

recommend 5 servers, each with 192 GB

=> full text search:
search past history based on keywoard

if daily merge zone crashed: manually trigger the merge and release the memory

normally log disk is different from the data disk

updateserver on 32 cores easily reaches 300k TPS

Oceanbase is a multi-active system, instead of active-passive, client will detect master change and connect to the new one
such alternative also means you can swtich traffic easily for grey update

data mirror verification 
1. all updateserver memtable should be consistent
2. verification of memtable is in the redo log too

########
oceanbase's baseline data is similar to BT's distributed B+ tree approach
inside each leaf there are mutliple blocks, with leaf maintaining a block index
each block has an internal row index

no cell version at ts support

focus on dense table instead of sparse table
-------
UpdateServer uses copy-on-write B-tree. 

------
When merging in progress, both are active serving the read question inside cluster
old tablet + frozen memtable + new memtable
new tablet + new memtable;

------

Non-partitioned table will fall into one server

can be partitioned with either hash partition or key partition. This is defined during table creation time

insert, replace, select, update, delete need to include partition list in their where clause

support max 8192 paritions

partition by range: we also define # of paritions in PARTITION BY RANGE clause
later can use ALTER TABLE to add new paritions that is BEYOND currently defined ranges. Obviously parition columns can not be NULL

partition by hash: 

only read-commited isolation level is supported at the moment 

----------
