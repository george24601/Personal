#!bin/bash

terraform apply -var-file=multi.tfvars

export CLUSTER_NAME=stg2tidb
aws eks --region ap-northeast-1 update-kubeconfig --name ${CLUSTER_NAME}

kubectl apply -f manifests/crd.yaml
kubectl apply -f manifests/local-volume-provisioner.yaml
kubectl apply -f manifests/gp2-storageclass.yaml
kubectl apply -f manifests/tiller-rbac.yaml
helm init --service-account tiller --upgrade --wait

###Is the cluster good now?
helm version

helm install charts/tidb-operator --name tidb-operator --namespace tidb-admin
<<OP

NOTES:
1. Make sure tidb-operator components are running
   kubectl get pods --namespace tidb-admin -l app.kubernetes.io/instance=tidb-operator
2. Install CRD
   kubectl apply -f https://raw.githubusercontent.com/pingcap/tidb-operator/master/manifests/crd.yaml
   kubectl get customresourcedefinitions
3. Modify tidb-cluster/values.yaml and create a TiDB cluster by installing tidb-cluster charts
   helm install tidb-cluster

OP

#stg1
helm install charts/tidb-cluster --name stg1-tidb-cluster --namespace stg1 --values stg1_tidb_cluster_values.yaml

helm upgrade stg1-tidb-cluster  charts/tidb-cluster --namespace stg1 --values stg1_tidb_cluster_values.yaml


#stg2
helm install charts/tidb-cluster --name stg2-tidb-cluster --namespace stg2 --values stg2_tidb_cluster_values.yaml

kubectl get po -n tidb -lapp.kubernetes.io/component=tidb

kubectl get services -n stg1

kubectl port-forward svc/stg1-tidb-cluster-pd 2379:2379

