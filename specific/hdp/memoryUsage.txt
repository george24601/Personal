container is the basic unit of processing capacity, and is an encapsulation of resource elements

Reserved Memory = Reserved for stack memory + Reserved for HBase memory (If HBase is on the same node)
16G node: reserved system memory 2G, reserved HBase memory 2G

Num(Containers) = min(2*CORES, 1.8*DISKS, (Total RAM - Reserved) / MIN_CONTAINER_SIZE)
between 8G and 24G, recommended min container size: 1G

RAM-per-Container = max(MIN_CONTAINER_SIZE, (Total RAM - Reserved) / Containers))

yarn-site.xml

yarn.nodemanager.resource.memory-mb = Num(Containers) * RAM-per-Container
yarn.scheduler.minimum-allocation-mb= RAM-per-Container
yarn.scheduler.maximum-allocation-mb= Num(containers) * RAM-per-Container

-------
e.g., 4 cores, 16G RAM, 4 mounting points

Reserved Memory= 4G
Min container size = 1G

Num(containers) = min (8, 7.2, 12/1) = 7.2 = 7
RAM-per-container = max(1, 12/7) = 1.7

yarn.nodemanager.resource.memory-mb= 7 * 1.7 * 1024
yarn.scheduler.minimum-allocation-mb= 1.7 * 1024
yarn.scheduler.maximum-allocation-mb= resource.memory-mb

python yarn-util.py <options>

python yarn-utils.py -c 16 -m 64 -d 4 -k True
